generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Todo {
  id String   @id @default(uuid())
  description String
  complete  Boolean  @default(false)
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Employee {
  id Int @id @default(autoincrement())
  name String @db.VarChar
  isAdmin Boolean @default(false)
  createAt DateTime @default(now()) @db.Timestamp(6)
}

// Next Auth

model Account {
  id String  @id @default(uuid())
  userId String
  type String
  provider String
  providerAccountId String
  refresh_token String?  @db.Text
  access_token String?  @db.Text
  expires_at Int?
  token_type String?
  scope    String?
  id_token String? @db.Text
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(uuid())
  sessionToken String @unique
  userId String
  expires DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id String @id @default(uuid())
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  accounts Account[]
  sessions Session[]
}

model VerificationToken {
  identifier String
  token String   @unique
  expires DateTime

  @@unique([identifier, token])
}
